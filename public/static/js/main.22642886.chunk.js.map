{"version":3,"sources":["redux/Reducer/index.js","redux/Reducer/productsReducer.js","redux/Actions/ActionTypes.js","redux/Reducer/cartReducer.js","redux/Reducer/commentsReducer.js","redux/Reducer/promotionReducer.js","redux/Reducer/FormsReducer.js","redux/configureStore.js","shared/baseUrl.js","redux/Actions/ActionCreators.js","redux/Actions/CommentAction.js","redux/Actions/CartAction.js","components/StyledComponents/Button.js","components/Header/Header.js","components/Loading/LoadingComponent.js","components/Home/Home.js","components/Product/Product.js","components/ProductList/ProductList.js","components/Cart/components/GotoCartModal.js","components/ProductDetail/components/CommentModel.js","components/ProductDetail/components/ReadOnlyStarRating.js","components/ProductDetail/ProductDetail.js","components/Contact/ContactPage.js","components/Footer/Footer.js","components/Cart/components/EmptyCart.js","components/Cart/components/CartColumns.js","components/Cart/components/CartItem.js","components/Cart/components/CartList.js","components/Cart/components/CartTotals.js","components/Cart/CartComponent.js","components/ComponentWrapper/ComponentWrapper.js","redux/Actions/FeedbackAction.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","products","state","isLoading","errMess","action","type","payload","cart","increment","incre","decrement","decre","total","totalPrice","cartSubTotal","cartTax","cartTotal","comments","comment","concat","promotions","createForms","feedback","firstName","lastName","telNum","email","agree","contactType","message","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","thunk","logger","baseUrl","productsLoading","productsFailed","addProducts","promotionLoading","promotionsFailed","addPromotions","addComment","commentsFailed","addComments","cartLoading","cartFailed","addCart","updatedCart","incrementFailed","incrementCart","updatedCartProduct","decrementCart","decrementFailed","removeItem","id","item","product","dispatch","tempProducts","slice","filter","a","index","indexOf","find","getItem","removedProducts","inCart","count","removeProd","error","removeProdFailed","cartClear","cartClearFailed","addTotals","subTotal","map","tax","parseFloat","toFixed","totalAdd","totalAddFailed","ButtonContainer","styled","button","props","Header","isNavOpen","isLoginModalOpen","toggleNav","setState","toggleLoginModal","handleLogin","e","preventDefault","alert","username","value","password","remember","checked","Fragment","Navbar","dark","expand","className","NavbarToggler","onClick","this","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","to","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","name","innerRef","input","check","Button","color","Component","Loading","RenderCard","FeaturedCard","src","image","alt","title","label","info","Home","Jumbotron","featuredProduct","productsErrMess","featuredPromotion","promotionsLoading","promotionsErrMess","div","Product","price","ProductWrapper","key","ProductList","Prod","RenderModal","ModalContainer","toggleModal","Modal","modalOpen","required","val","length","maxLength","len","RenderCommentModel","CommentModelWrapper","handleCommentSubmit","select","model","cx","text","placeholder","validators","minLength","show","messages","textarea","rows","CommentModel","postComment","productId","rating","author","ReadOnlyStarRating","Array","star","i","ratingValue","size","RenderComment","toggleCommentModal","commentModalOpen","cmnts","style","flexBasis","Intl","DateTimeFormat","year","month","day","format","Date","date","RenderProduct","ProductDetailWrapper","ProductDetail","useState","setmodalOpen","setcommentModalOpen","width","display","justifyContent","company","disabled","addToCart","cartItems","isNumber","isNaN","Number","validEmail","test","ContactPage","handleSubmit","values","postFeedback","resetFeedbackForm","ContactPageWrapper","Breadcrumb","BreadcrumbItem","active","checkbox","aria-hidden","Footer","EmptyCart","CartColumns","CartItem","height","CartList","CartTotals","clearCart","borderTop","CartComponent","ComponentWrapper","fetchProduct","fetchComments","fetchPromotions","path","component","featured","promotion","exact","match","parseInt","params","commentsErrMess","withRouter","connect","fetch","then","response","ok","Error","status","statusText","json","catch","actions","reset","newComment","toISOString","method","body","JSON","stringify","headers","credentials","newFeedBack","console","log","items","tempCart","selectedItem","tempProduct","seletedItem","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22642886.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport { createForms } from 'react-redux-form';\n\nimport { Products } from './productsReducer';\nimport { Comments } from './commentsReducer';\nimport { Promotion } from './promotionReducer';\nimport { Cart, Increment, Decrement, TotalPrice } from './cartReducer';\nimport { InitialFeedback } from './FormsReducer';\n\nexport default combineReducers({\n    products: Products,\n    cart: Cart,\n    increment: Increment,\n    decrement: Decrement,\n    total: TotalPrice,\n    comments: Comments,\n    promotions: Promotion,\n    ...createForms({\n        feedback: InitialFeedback\n    })\n});","import * as ActionTypes from '../Actions/ActionTypes';\n\nexport const Products = (state = {\n    isLoading: true,\n    errMess: null,\n    products: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PRODUCT:\n            return { ...state, isLoading: false, errMess: null, products: action.payload }\n        case ActionTypes.PRODUCT_LOADING:\n            return { ...state, isLoading: true, errMess: null, products: [] }\n        case ActionTypes.PRODUCT_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, products: [] }\n        default:\n            return state;\n    }\n}\n","export const ADD_COMMENT = \"ADD_COMMENT\";\n\nexport const PRODUCT_LOADING = 'PRODUCT_LOADING';\nexport const PRODUCT_FAILED = 'PRODUCT_FAILED';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const PROMOTIONS_LOADING = 'PROMOTIONS_LOADING';\nexport const ADD_PROMOTIONS = 'ADD_PROMOTIONS';\nexport const PROMOTIONS_FAILED = 'PROMOTIONS_FAILED';\n\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const CART_LOADING = 'CART_LOADING';\nexport const CART_FAILED = 'CART_FAILED';\n\nexport const INCREMENT = 'INCREMENT';\nexport const INCREMENT_FAILED = 'INCREMENT_FAILED';\n\nexport const DECREMENT = 'DECREMENT';\nexport const DECREMENT_FAILED = 'DECREMENT_FAILED';\n\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const REMOVE_ITEM_FAILED = 'REMOVE_ITEM_FAILED';\n\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const CLEAR_CART_FAILED = 'CLEAR_CART_FAILED';\n\nexport const ADD_TOTALS = 'ADD_TOTALS';\nexport const ADD_TOTALS_FAILED = 'ADD_TOTALS_FAILED';\n\n\n","import * as ActionTypes from '../Actions/ActionTypes';\n\n// const cartItems = localStorage.getItem(\"cartItems\")\n//     ? JSON.parse(localStorage.getItem(\"cartItems\"))\n//     : [];\n\nexport const Cart = (state = {\n    isLoading: true,\n    errMess: null,\n    cart: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_TO_CART:\n            return { ...state, isLoading: false, errMess: null, cart: action.payload }\n\n        case ActionTypes.CART_LOADING:\n            return { ...state, isLoading: true, errMess: null, cart: [] }\n\n        case ActionTypes.CART_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, cart: [] }\n\n        case ActionTypes.REMOVE_ITEM:\n            return { ...state, isLoading: false, errMess: null, cart: action.payload }\n\n        case ActionTypes.REMOVE_ITEM_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, cart: [] }\n\n        case ActionTypes.CLEAR_CART:\n            return { ...state, isLoading: false, errMess: null, cart: action.payload }\n\n        case ActionTypes.CLEAR_CART_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, cart: [] }\n\n        default:\n            return state;\n    }\n}\n\nexport const Increment = (state = {\n    isLoading: true,\n    errMess: null,\n    incre: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.INCREMENT:\n            return { ...state, isLoading: false, errMess: null, incre: action.payload }\n\n        case ActionTypes.INCREMENT_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, incre: [] }\n\n        default:\n            return state;\n    }\n}\n\nexport const Decrement = (state = {\n    isLoading: true,\n    errMess: null,\n    decre: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.DECREMENT:\n            return { ...state, isLoading: false, errMess: null, decre: action.payload }\n\n        case ActionTypes.DECREMENT_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, decre: [] }\n\n        default:\n            return state;\n    }\n}\n\nexport const TotalPrice = (state = {\n    isLoading: true,\n    errMess: null,\n    totalPrice: {\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0,\n    }\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_TOTALS:\n            return { ...state, isLoading: false, errMess: null, totalPrice: action.payload }\n\n        case ActionTypes.ADD_TOTALS_FAILED:\n            return {\n                ...state, isLoading: false, errMess: action.payload, totalPrice: {\n                    cartSubTotal: 0,\n                    cartTax: 0,\n                    cartTotal: 0,\n                }\n            }\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from '../Actions/ActionTypes';\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return { ...state, isLoading: false, errMess: null, comments: action.payload }\n\n        case ActionTypes.COMMENTS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, comments: [] }\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return { ...state, comments: state.comments.concat(comment) };\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from '../Actions/ActionTypes';\n\nexport const Promotion = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOTIONS:\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload }\n\n        case ActionTypes.PROMOTIONS_LOADING:\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\n\n        case ActionTypes.PROMOTIONS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, promotions: [] }\n\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstName: '',\n    lastName: '',\n    telNum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducers from \"./Reducer/index\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducers,\n    composeEnhancer(applyMiddleware(thunk, logger))\n);\nexport default store;\n","export const baseUrl = 'http://localhost:3001'","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../../shared/baseUrl';\n\n\nexport const fetchProduct = () => (dispatch) => {\n    dispatch(productsLoading(true));\n\n    return fetch(baseUrl + '/products')\n        // handling errors\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + \": \" + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errorMessage = new Error(error.message);\n                throw errorMessage;\n            })\n        .then(response => response.json())\n        .then(products => dispatch(addProducts(products)))\n        .catch(error => dispatch(productsFailed(error.message)));\n}\n\nexport const productsLoading = () => ({\n    type: ActionTypes.PRODUCT_LOADING\n});\n\nexport const productsFailed = (errMess) => ({\n    type: ActionTypes.PRODUCT_FAILED,\n    payload: errMess\n})\n\nexport const addProducts = (products) => ({\n    type: ActionTypes.ADD_PRODUCT,\n    payload: products,\n});\n\n\n// Fetch Promotions\nexport const fetchPromotions = () => (dispatch) => {\n    dispatch(promotionLoading(true));\n\n    return fetch(baseUrl + '/promotions')\n        // handling errors\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + \": \" + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errorMessage = new Error(error.message);\n                throw errorMessage;\n            })\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n}\n\nexport const promotionLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = (errMess) => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n})\n\nexport const addPromotions = (promotions) => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions,\n});","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../../shared/baseUrl';\n\n// POST COMMENTS\nexport const postComment = (productId, rating, author, comment) => (dispatch) => {\n    const newComment = {\n        productId: productId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + '/comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + \": \" + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errorMessage = new Error(error.message);\n                throw errorMessage;\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            // console.log(\"post comments \", error.message)\n            alert(\"Your comment could not be posted\\n Error: \" + error.message);\n        });\n}\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\n\n// Fetch Comments\nexport const fetchComments = () => (dispatch) => {\n\n    return fetch(baseUrl + '/comments')\n        // handling errors\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + \": \" + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errorMessage = new Error(error.message);\n                throw errorMessage;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errMess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n})\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments,\n});","import * as ActionTypes from './ActionTypes';\n\n// Cart Function\nexport const addToCart = (product, items) => (dispatch) => {\n    try {\n        dispatch(cartLoading(true));\n        const cart = items;\n\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n        product.inCart = true;\n\n        const updatedCart = [...cart, product];\n\n        // localStorage.setItem(\"cartItems\", JSON.stringify(updatedCart));\n\n        dispatch(addTotals(updatedCart));\n        dispatch(addCart(updatedCart));\n\n    } catch (error) {\n        dispatch(cartFailed(error))\n    }\n}\n\nexport const cartLoading = () => ({\n    type: ActionTypes.CART_LOADING\n});\n\nexport const cartFailed = (errMess) => ({\n    type: ActionTypes.CART_FAILED,\n    payload: errMess\n})\n\nexport const addCart = (updatedCart) => ({\n    type: ActionTypes.ADD_TO_CART,\n    payload: updatedCart,\n});\n\n// INCREMENT FUNCTION\nexport const increment = (id, cart) => (dispatch) => {\n    try {\n        const tempCart = cart;\n        const selectedItem = tempCart.find((item) => item.id === id);\n        const index = tempCart.indexOf(selectedItem);\n        const product = tempCart[index];\n        product.count = product.count + 1;\n        product.total = product.count * product.price;\n        const updatedCartProduct = [...tempCart];\n\n        dispatch(incrementCart(updatedCartProduct))\n        dispatch(addTotals(updatedCartProduct));\n    } catch (error) {\n        dispatch(incrementFailed(error))\n    }\n}\n\nexport const incrementFailed = (errMess) => ({\n    type: ActionTypes.INCREMENT_FAILED,\n    payload: errMess\n})\n\nexport const incrementCart = (updatedCartProduct) => ({\n    type: ActionTypes.INCREMENT,\n    payload: updatedCartProduct,\n});\n\n// DECREMENT FUNCTION\nexport const decrement = (id, cart, products) => (dispatch) => {\n    try {\n\n        let tempCart = cart;\n        let tempProduct = products;\n        const seletedItem = tempCart.find((item) => item.id === id);\n        const index = tempCart.indexOf(seletedItem);\n        const product = tempCart[index];\n        product.count = product.count - 1;\n\n        if (product.count === 0) {\n            dispatch(removeItem(id, cart, tempProduct));\n\n        } else {\n            product.total = product.count * product.price;\n        }\n\n        const updatedCartProduct = [...tempCart];\n\n        dispatch(decrementCart(updatedCartProduct));\n        dispatch(addTotals(updatedCartProduct));\n\n\n    } catch (error) {\n        dispatch(decrementFailed(error))\n    }\n}\n\nexport const decrementCart = (updatedCartProduct) => ({\n    type: ActionTypes.DECREMENT,\n    payload: updatedCartProduct,\n})\n\nexport const decrementFailed = (errMess) => ({\n    type: ActionTypes.DECREMENT_FAILED,\n    payload: errMess,\n})\n\n// Remove Item Function\n\nconst getItem = (id, products) => {\n    const product = products.find((item) => item.id === id);\n    return product;\n};\n\nexport const removeItem = (id, item, product) => (dispatch) => {\n    try {\n        let tempProducts = [product];\n        let cart = item;\n        cart = cart.slice().filter(a => a.id !== id);\n        const index = tempProducts.indexOf(getItem(id, tempProducts));\n        let removedProducts = tempProducts[index];\n        removedProducts.inCart = false;\n        removedProducts.count = 0;\n        removedProducts.total = 0;\n\n        const updatedCart = cart;\n\n        dispatch(removeProd(updatedCart))\n\n    } catch (error) {\n        dispatch(removeProdFailed(error))\n    }\n}\n\nexport const removeProd = (updatedCart) => ({\n    type: ActionTypes.REMOVE_ITEM,\n    payload: updatedCart,\n})\n\nexport const removeProdFailed = (errMess) => ({\n    type: ActionTypes.REMOVE_ITEM_FAILED,\n    payload: errMess,\n})\n\n// CLEAR CART\n\nexport const clearCart = () => (dispatch) => {\n    try {\n        let cart = [];\n        const updatedCart = cart;\n        dispatch(cartClear(updatedCart))\n        dispatch(addTotals(updatedCart));\n\n    } catch (error) {\n        dispatch(cartClearFailed(error))\n    }\n}\n\nexport const cartClear = (updatedCart) => ({\n    type: ActionTypes.CLEAR_CART,\n    payload: updatedCart,\n})\n\nexport const cartClearFailed = (errMess) => ({\n    type: ActionTypes.CLEAR_CART_FAILED,\n    payload: errMess,\n})\n\n// ADD TOTALS & TAX\n\nexport const addTotals = (updatedCart) => (dispatch) => {\n    try {\n        let subTotal = 0;\n        updatedCart.map((item) => (subTotal += item.total));\n        const tempTax = subTotal * 0.05;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const allTotal = subTotal + tax;\n\n        const total = {\n            cartSubTotal: subTotal,\n            cartTax: tax,\n            cartTotal: allTotal\n        };\n        dispatch(totalAdd(total))\n\n    } catch (error) {\n        dispatch(totalAddFailed(error))\n    }\n}\n\nexport const totalAdd = (total) => ({\n    type: ActionTypes.ADD_TOTALS,\n    payload: total,\n})\n\nexport const totalAddFailed = (errMess) => ({\n    type: ActionTypes.ADD_TOTALS_FAILED,\n    payload: errMess,\n})","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.button`\n    text-transform: capitalize;\n    font-size: 1.1rem;\n    background: transparent;\n    font-family: Poppins, sans-serif;\n    padding: 0.2rem 0.5rem;\n    border: 0.05rem solid var(--lightBlue);\n    border-color: ${props => (props.cart ? \"var(--mainYellow)\" : \"var(--lightBlue)\")};\n    color: ${props => (props.cart ? \"var(--mainYellow)\" : \"var(--lightBlue)\")};\n    border-radius: 0.5rem;\n    cursor: pointer;\n    margin: 0.2rem;\n    transition: all 0.5s ease-in-out;\n    &:hover {\n        background: ${props => (props.cart ? \"var(--mainYellow)\" : \"var(--lightBlue)\")};;\n        color: var(--mainBlue);\n    }\n    &:focus {\n        outline: none\n    }\n`","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { NavLink, Link } from 'react-router-dom';\nimport { ButtonContainer } from '../StyledComponents/Button';\n\n\nexport default class Header extends Component {\n\n    state = {\n        isNavOpen: false,\n        isLoginModalOpen: false\n    }\n\n    toggleNav = () => {\n        this.setState({ isNavOpen: !this.state.isNavOpen });\n    }\n\n    toggleLoginModal = () => {\n        this.setState({ isLoginModalOpen: !this.state.isLoginModalOpen });\n    }\n\n    handleLogin = (e) => {\n        e.preventDefault();\n        this.toggleLoginModal();\n        alert(\"UserName: \" + this.username.value + \"Password: \" + this.password.value + \"Remember: \" + this.remember.checked);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"text-uppercase mr-4\" href=\"/\">Product</NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem onClick={this.toggleNav}>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-bg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem onClick={this.toggleNav}>\n                                    <NavLink className=\"nav-link\" to=\"/shop\">\n                                        <span className=\"fa fa-shopping-bag fa-bg\"></span> Shop\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem onClick={this.toggleNav}>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-bg\"></span> Contact\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    {/* <ButtonContainer onClick={this.toggleLoginModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                    </ButtonContainer> */}\n                                    <Link to=\"/cart\">\n                                        <ButtonContainer cart>\n                                            <span className=\"fas fa-cart-plus\"></span> My Cart\n                                        </ButtonContainer>\n                                    </Link>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                {/* <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Product Catalog</h1>\n                                <p>We are having the best range of cell phones. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron> */}\n                <Modal isOpen={this.state.isLoginModalOpen} toggle={this.toggleLoginModal}>\n                    <ModalHeader toggle={this.toggleLoginModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">\n                                    Username\n                                </Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">\n                                    Password\n                                </Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\n\nconst Loading = () => {\n    return (\n        <div className=\"m-auto\">\n            <div className=\"col-12 py-5 d-flex justify-content-center\">\n                <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            </div>\n        </div>\n    );\n}\n\nexport default Loading;\n\n","import React from 'react';\nimport styled from \"styled-components\";\nimport Loading from '../Loading/LoadingComponent';\nimport { baseUrl } from '../../shared/baseUrl';\nimport { Jumbotron } from 'reactstrap';\n\nfunction RenderCard({ item, isLoading, errMess }) {\n    if (isLoading) {\n        return (\n            <Loading />\n        )\n    }\n    else if (errMess) {\n        return (\n            <h4 className=\"text-white py-5 m-0 text-center\">{errMess}</h4>\n        )\n    }\n    else {\n        return (\n            <FeaturedCard className=\"py-5\">\n                <div className=\"card\">\n                    <div className=\"img-container p-5\">\n                        <img src={baseUrl + item.image} alt={item.title} className=\"card-img-top\" />\n                    </div>\n                    <div className=\"card-footer\">\n                        <div className=\"d-flex justify-content-between\">\n                            <h3 className=\"align-self-center\">{item.title}</h3>\n                            {\n                                item.label === \"New\" ? <h5 className=\"align-self-center text-danger\"><span className=\"fa fa-star\"></span> New</h5> : null\n                            }\n                        </div>\n                        <p className=\"my-2\">{item.info}</p>\n                    </div>\n                </div>\n            </FeaturedCard>\n        )\n    }\n}\n\nfunction Home(props) {\n    return (\n        <div>\n            <Jumbotron>\n                <div className=\"container\">\n                    <div className=\"row row-header\">\n                        <div className=\"col-12 col-sm-6\">\n                            <h1>Product Catalog</h1>\n                            <p>We are having the best range of cell phones. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n                        </div>\n                    </div>\n                </div>\n            </Jumbotron>\n            <div className=\"container\">\n                <div className=\"row align-item-center\">\n                    <div className=\"col-12 col-md\">\n                        <RenderCard\n                            item={props.featuredProduct}\n                            isLoading={props.productsLoading}\n                            errMess={props.productsErrMess} />\n                    </div>\n                    <div className=\"col-12 col-md\">\n                        <RenderCard\n                            item={props.featuredPromotion}\n                            isLoading={props.promotionsLoading}\n                            errMess={props.promotionsErrMess}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n\nconst FeaturedCard = styled.div`\n    .card {\n        position: relative;\n        background-color: var(--headerFooterBackground);\n        border-radius: 20px;\n        overflow: hidden;\n    }\n    .card::before {\n        content: '';\n        position: absolute;\n        top: -50%;\n        width: 100%;\n        height: 100%;\n        background-color: #2196f3;\n        transform: skewY(345deg);\n        transition: 0.5s;\n    }\n    /* .card:hover::before {\n        top: -70%;\n        transform: skewY(390deg);\n    } */\n    .card-footer {\n        border-top: transparent;\n        transition: all 0.5s linear;\n        background: #2196f3;\n    }\n    .img-container {\n        position: relative;\n        overflow: hidden;\n    }\n`","import React from 'react'\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { baseUrl } from '../../shared/baseUrl';\n\nconst Product = (props) => {\n  // console.log(props)\n  const { id, title, image, price } = props.product;\n  return (\n    <ProductWrapper key={id} className=\"col-9 mx-auto col-md-6 col-lg-3 my-3\">\n      <Link to={`/shop/${id}`}>\n        <div className=\"card\">\n          <div\n            className=\"img-container p-5\"\n          // onClick={}\n          >\n            <img src={baseUrl + image} alt=\"productImage\" className=\"card-img-top\" />\n          </div>\n          <div className=\"card-footer d-flex justify-content-between\">\n            <p className=\"align-self-center mb-0 card-title\">{title}</p>\n            <h5 className=\"text-blue font-italic mb-0 price\">\n              <span className=\"mr-1\">&#8377;</span>\n              {price}\n            </h5>\n            {/* <button disabled={inCart ? true : false}\n              // onClick={() => {\n              //     this.props.addToCart(id);\n              //     this.props.openModal(id);\n              // }}\n              className=\"buy\">{inCart ? (\n                <p className=\"text-capitalize mb-0\" disabled>\n                  in cart\n                </p>\n              ) : (\n                  <i className=\"fas fa-cart-plus\" />\n                )}</button> */}\n          </div>\n        </div>\n      </Link>\n    </ProductWrapper>\n  )\n}\n\nexport default Product;\n\nProduct.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.number,\n    img: PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.number,\n    inCart: PropTypes.bool,\n  }).isRequired,\n};\n\nconst ProductWrapper = styled.div`\n  .card {\n    position: relative;\n    background-color: var(--headerFooterBackground);\n    border-radius: 20px;\n    overflow: hidden;\n  }\n  .card::before {\n    content: '';\n    position: absolute;\n    top: -50%;\n    width: 100%;\n    height: 100%;\n    background-color: var(--secondaryBackground);\n    transform: skewY(345deg);\n    transition: 0.5s;\n  }\n  .card:hover::before {\n      top: -70%;\n      transform: skewY(390deg);\n  }\n  .card-footer {\n    border-top: transparent;\n    transition: all 0.5s linear;\n  } \n    &:hover {\n    .card {\n      border: 0.04rem solid rgba(0, 0, 0, 0.2);\n      /* box-shadow: 2px 2px 5px 0px rgba(33,150,243, 0.7); */\n    }\n    .card-footer {\n      background: var(--secondaryBackground);\n    }\n  }\n  .img-container {\n    position: relative;\n    overflow: hidden;\n  }\n  .card-img-top {\n    transition: all 0.5s linear;\n  }\n  .img-container:hover .card-img-top {\n    transform: scale(1.2);\n  }\n  .card-title {\n      color: var(--mainWhite);\n      font-weight: 500;\n      text-transform: uppercase;\n  }\n  .price {\n      color: var(--mainWhite);\n      font-weight: 500;\n  }\n  .buy {\n      position: absolute;\n      left: 50%;\n      top: 100%;\n      transform: translate(-50%, -50%);\n      opacity: 0;\n      padding: 10px 30px;\n      color: var(--mainWhite);\n      background-color: var(--secondaryBackground);\n      margin-top: 15px;\n      border-radius: 30px;\n      border: none;\n      outline: none;\n      text-transform: uppercase;\n      transition: 0.5s;\n  } \n  .card:hover .buy {\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%, -50%);\n      opacity: 1;\n  }\n`;\n","import React from 'react';\n// import { Link } from \"react-router-dom\";\n// import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport Loading from '../Loading/LoadingComponent';\nimport Product from '../Product/Product';\n\nconst ProductList = (props) => {\n    const Prod = props.products.products.map((product) => {\n        return (\n            <Product\n                key={product.id}\n                product={product}\n            />\n        );\n    })\n    if (props.products.isLoading) {\n        return (\n            <div>\n                <Loading />\n            </div>\n        );\n    }\n    else if (props.products.errMess) {\n        return (\n            <div>\n                <h4 className=\"text-white py-5 m-0 text-center\"> {props.products.errMess}</h4 >\n            </div>\n        );\n    }\n    else {\n        return (\n            <React.Fragment>\n                <div className=\"py-5\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            {/* <Breadcrumb>\n                                <BreadcrumbItem>\n                                    <Link to=\"/home\"> Home\n                                    </Link>\n                                </BreadcrumbItem>\n                                <BreadcrumbItem active>\n                                    Shop\n                                </BreadcrumbItem>\n                            </Breadcrumb> */}\n                            <div className=\"col-12 text-white\">\n                                <h3>Shop</h3>\n                                <hr />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            {Prod}\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment >\n        );\n    }\n}\n\nexport default ProductList;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ButtonContainer } from \"../../StyledComponents/Button\";\nimport { Link } from \"react-router-dom\";\nimport { baseUrl } from \"../../../shared/baseUrl\";\n\nconst RenderModal = (props) => {\n    const { image, title, price } = props.props.product;\n    if (props.props.product != null) {\n        return (\n            <ModalContainer >\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div id=\"modal\" className=\"col-8 mx-auto col-md-6 col-lg-4 text-center text-capitalize p-5\">\n                            <h5>item added to the cart</h5>\n                            <img src={baseUrl + image} className=\"img-fluid\" alt=\"product\" />\n                            <h5> {title} </h5>\n                            <h5 className=\"text-muted\">price: &#8377;{price}</h5>\n                            <ButtonContainer\n                                onClick={() => {\n                                    props.props.toggleModal();\n                                }}\n                            >\n                                back\n                            </ButtonContainer>\n                            <Link to=\"/cart\">\n                                <ButtonContainer\n                                    cart\n                                    onClick={() => {\n                                        props.props.toggleModal();\n                                    }}\n                                >\n                                    go to cart\n                            </ButtonContainer>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </ModalContainer>\n        );\n    } else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nconst Modal = (props) => {\n    return (\n        <div>\n            {!props.modalOpen ? null : (\n                <RenderModal props={props} />\n            )}\n        </div>\n    );\n}\n\nexport default Modal;\n\nconst ModalContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1;\n  #modal {\n    background: var(--mainWhite);\n  }\n`;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport { ButtonContainer } from \"../../StyledComponents/Button\";\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport cx from 'classnames';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nconst RenderCommentModel = (props) => {\n    return (\n        <CommentModelWrapper>\n            <div className=\"row\">\n                <div id=\"modal\" className=\"col-8 mx-auto col-md-6 col-lg-4 text-center text-capitalize p-5\">\n                    <h5>Submit Comment</h5>\n                    <LocalForm onSubmit={(value) => props.handleCommentSubmit(value)}>\n                        <div className=\"input-group\">\n                            <label>Rating</label>\n                            <Control.select\n                                model=\".rating\"\n                                type=\"select\"\n                                className={cx(\"select\", \"form-control\")}\n                                name=\"contactType\">\n                                <option>--select rating--</option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                            </Control.select>\n                        </div>\n                        <div className=\"input-group\">\n                            <Control.text\n                                className={cx(\"input\", \"form-control\")}\n                                model=\".author\"\n                                id=\"author\"\n                                name=\"author\"\n                                placeholder=\"Name\"\n                                validators={{\n                                    required, minLength: minLength(3), maxLength: maxLength(20)\n                                }}\n                            />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".author\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be greater than 2 characters',\n                                    maxLength: 'Must be 15 characters or less'\n                                }}\n                            />\n                        </div>\n                        <div className=\"input-group\">\n                            <Control.textarea\n                                model=\".comment\"\n                                className={cx(\"textarea\", \"form-control\")}\n                                type=\"textarea\"\n                                id=\"comment\"\n                                name=\"comment\"\n                                rows=\"3\"\n                                placeholder=\"Your Comment\"\n                            />\n                        </div>\n                        <ButtonContainer\n                            onClick={() => {\n                                props.props.toggleModal();\n                            }}\n                        >\n                            back\n                    </ButtonContainer>\n                        <ButtonContainer\n                            cart\n                            type=\"submit\"\n                        >\n                            Submit\n                    </ButtonContainer>\n                    </LocalForm>\n                </div>\n            </div>\n        </CommentModelWrapper>\n    );\n}\n\nconst CommentModel = (props) => {\n\n    const handleCommentSubmit = (value) => {\n        props.postComment(props.productId, value.rating, value.author, value.comment);\n        props.toggleModal();\n    }\n\n    return (\n        <div>\n            {!props.modalOpen ? null : (\n                <RenderCommentModel props={props} handleCommentSubmit={handleCommentSubmit} />\n            )}\n        </div>\n    );\n}\n\nexport default CommentModel;\n\nconst CommentModelWrapper = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.3);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    #modal {\n        background: var(--mainWhite);\n    }\n    .input-group {\n        width: 100%;\n        margin: 20px 0;\n    }\n    .select, .input {\n        border: none;\n        border-bottom: 1px solid #ccc;\n        outline: none;\n        padding-bottom: 5px;\n        background-color: transparent;\n        width: 100%;\n        padding: 0;\n    }\n    .textarea {\n        width: 100%;\n        border: none;\n        border-bottom: 1px solid #ccc;\n        outline: none;\n        padding: 0;\n        padding-bottom: 5px;\n        background-color: transparent;\n        resize: none;\n    }\n    label {\n        margin-bottom: 6px;\n        display: block;\n    }\n`;","import React from 'react';\nimport { FaStar } from 'react-icons/fa';\n\nconst ReadOnlyStarRating = (props) => {\n    const comment = props.comments;\n    return (\n        <div>\n            {[...Array(5)].map((star, i) => {\n                const ratingValue = i + 1;\n\n                return (\n                    <label key={i}>\n                        <FaStar\n                            className=\"star\"\n                            color={ratingValue <= comment ? \"#ffc107\" : \"#e4e5e9\"}\n                            size={15}\n                        />\n\n                    </label>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default ReadOnlyStarRating;","import React, { useState } from 'react'\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n// import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport { ButtonContainer } from '../StyledComponents/Button';\nimport Modal from \"../Cart/components/GotoCartModal\";\nimport CommentModel from \"./components/CommentModel\";\nimport ReadOnlyStarRating from './components/ReadOnlyStarRating';\nimport Loading from '../Loading/LoadingComponent';\nimport { baseUrl } from '../../shared/baseUrl';\n\nconst RenderComment = ({ comments, postComment, productId, toggleCommentModal, commentModalOpen }) => {\n\n    if (comments == null) {\n        return (<div></div>)\n    }\n    const cmnts = comments.map(comment => {\n        return (\n            <li key={comment.id}>\n                <div className=\"d-flex justify-content-between\">\n                    <h6 style={{ flexBasis: '60%' }} className=\"text-primary\">{comment.comment}</h6>\n                    <ReadOnlyStarRating style={{ flexBasis: '40%' }} comments={comment.rating} />\n                </div>\n\n                <p className=\"text-muted text-right\">-- {comment.author},\n                        &nbsp;\n                        {new Intl.DateTimeFormat('en-US', {\n                    year: 'numeric',\n                    month: 'long',\n                    day: '2-digit'\n                }).format(new Date(comment.date))}\n                </p>\n                <hr />\n                <CommentModel\n                    toggleModal={toggleCommentModal}\n                    modalOpen={commentModalOpen}\n                    postComment={postComment}\n                    productId={productId}\n                />\n            </li>\n        )\n    })\n    return (\n        <div>\n            <h5 className='py-3 text-white'>Reviews:</h5>\n            <ul className='list-unstyled'>\n                {cmnts}\n            </ul>\n        </div>\n    )\n}\n\nconst RenderProduct = ({ product }) => {\n    const { title, image, price, info } = product;\n    if (product != null) {\n        return (\n            <ProductDetailWrapper>\n                <div className=\"card\">\n                    <div className=\"img-container p-5\">\n                        <img alt={title} src={baseUrl + image} className=\"card-img-top\" />\n                    </div>\n                    <div className=\"card-footer\">\n                        <div className=\"d-flex justify-content-between\">\n                            <h3 className=\"align-self-center\">{title}</h3>\n                            <h3>\n                                <span className=\"mr-1\">&#8377;</span>\n                                {price}\n                            </h3>\n                        </div>\n                        <p className=\"my-2 text-center\">{info}</p>\n                    </div>\n                </div>\n            </ProductDetailWrapper>\n        );\n    } else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nconst ProductDetail = (props) => {\n    const [modalOpen, setmodalOpen] = useState(false);\n    const [commentModalOpen, setcommentModalOpen] = useState(false);\n\n    const toggleCommentModal = () => {\n        setcommentModalOpen(!commentModalOpen)\n    }\n\n    const toggleModal = () => {\n        setmodalOpen(!modalOpen);\n    }\n\n    // const cartAction = (props.product) => {\n    //     props.addToCart(props.product, props.cartItems)\n    // }\n\n    if (props.isLoading) {\n        return (\n            <div>\n                <Loading />\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return (\n            <div>\n                <h4 className=\"text-white py-5 m-0 text-center\">{props.errMess}</h4>\n            </div>\n        );\n    }\n    else if (props.product != null) {\n        return (\n            <React.Fragment>\n                <div className=\"py-4\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            {/* <Breadcrumb>\n                                <BreadcrumbItem>\n                                    <Link to=\"/shop\">Shop</Link>\n                                </BreadcrumbItem>\n                                <BreadcrumbItem active>\n                                    {props.product.title}\n                                </BreadcrumbItem>\n                            </Breadcrumb> */}\n                            <div className=\"col-12 text-white\">\n                                <h3>{props.product.title}</h3>\n                                <hr />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <RenderProduct product={props.product} />\n                            </div>\n                            <div className=\"col-md-6 py-3\">\n                                <table style={{ width: '100%' }}>\n                                    <tbody>\n                                        <tr style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                            <td style={{ flexBasis: \"40%\" }} className=\"text-white text-capitalize\"><h4>model</h4></td>\n                                            <td style={{ flexBasis: \"60%\" }} className=\"text-white text-capitalize\"><h4>{props.product.title}</h4></td>\n                                        </tr>\n                                        <tr style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                            <td style={{ flexBasis: \"40%\" }} className=\"text-white text-capitalize\"><h5>made by</h5></td>\n                                            <td style={{ flexBasis: \"60%\" }} className=\"text-white text-capitalize\"><h5>{props.product.company}</h5></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                                <RenderComment\n                                    comments={props.comments}\n                                    postComment={props.postComment}\n                                    productId={props.product.id}\n                                    toggleCommentModal={toggleCommentModal}\n                                    commentModalOpen={commentModalOpen}\n                                />\n                                <div className=\"py-2\">\n                                    <ButtonContainer\n                                        cart\n                                        disabled={props.product.inCart ? true : false}\n                                        onClick={() =>\n                                            props.addToCart(props.product, props.cartItems)\n                                            // toggleModal();\n                                        }\n                                    >\n                                        {props.product.inCart ? \"inCart\" : \"add to cart\"}\n                                    </ButtonContainer>\n                                    <ButtonContainer\n                                        onClick={() => toggleCommentModal()}\n                                    >\n                                        Add Comment\n                                    </ButtonContainer>\n                                    <Link to=\"/shop\">\n                                        <ButtonContainer\n                                            cart\n                                        >\n                                            Back To Shop\n                                    </ButtonContainer>\n                                    </Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Modal\n                    toggleModal={toggleModal}\n                    modalOpen={modalOpen}\n                    product={props.product}\n                />\n            </React.Fragment>\n        )\n    } else {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default ProductDetail;\n\n\nconst ProductDetailWrapper = styled.div`\n    .card {\n        position: relative;\n        background-color: var(--headerFooterBackground);\n        border-radius: 20px;\n        overflow: hidden;\n    }\n    .card::before {\n        content: '';\n        position: absolute;\n        top: -50%;\n        width: 100%;\n        height: 100%;\n        background-color: #2196f3;\n        transform: skewY(345deg);\n        transition: 0.5s;\n    }\n    .card:hover::before {\n        top: -70%;\n        transform: skewY(390deg);\n    }\n    .card-footer {\n        border-top: transparent;\n        transition: all 0.5s linear;\n        background: #2196f3;\n    }\n    .img-container {\n        position: relative;\n        overflow: hidden;\n    }\n    .table-wrapper {\n        width: 100%;\n    }\n    .tableRow {\n       display: flex;\n       justify-content: space-between;\n    }\n`","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Label } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport cx from 'classnames';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass ContactPage extends Component {\n\n    handleSubmit = (values) => {\n        // alert(\"Current State is: \" + JSON.stringify(values));\n        this.props.postFeedback(values.firstName, values.lastName, values.telNum, values.email, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return (\n            <ContactPageWrapper>\n                <div className=\"container py-5\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/home\">Home</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>\n                                Contact Us\n                         </BreadcrumbItem>\n                        </Breadcrumb>\n                    </div>\n                    <h1>Connect with us</h1>\n                    <p>We would love to respond to your queries. Feel free to get in touch with us.</p>\n                    <div className=\"contact-box\">\n                        <div className=\"contact-left\">\n                            <h3>Sent Your Request</h3>\n                            <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                                <div className=\"input-row\">\n                                    <div className=\"input-group\">\n                                        <Label>\n                                            First name\n                                        </Label>\n                                        <Control.text\n                                            className={cx(\"input\", \"form-control\")}\n                                            model=\".firstName\"\n                                            id=\"firstName\"\n                                            name=\"firstName\"\n                                            placeholder=\"First Name\"\n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".firstName\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <Label>\n                                            Last name\n                                        </Label>\n                                        <Control.text\n                                            className={cx(\"input\", \"form-control\")}\n                                            model=\".lastName\"\n                                            id=\"lastName\"\n                                            name=\"lastName\"\n                                            placeholder=\"Last Name\"\n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".lastName\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"input-row\">\n                                    <div className=\"input-group\">\n                                        <Label>\n                                            Tel. Number\n                                        </Label>\n                                        <Control.text\n                                            className={cx(\"input\", \"form-control\")}\n                                            model=\".telNum\"\n                                            id=\"telNum\"\n                                            name=\"telNum\"\n                                            placeholder=\"Tel. Number\"\n                                            validators={{\n                                                required,\n                                                minLength: minLength(5),\n                                                maxLength: maxLength(10),\n                                                isNumber\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".telNum\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 5 numbers',\n                                                maxLength: 'Must be 10 numbers and less',\n                                                isNumber: 'Must be a number'\n                                            }}\n                                        />\n\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <Label>\n                                            Email\n                                        </Label>\n                                        <Control.text\n                                            className={cx(\"input\", \"form-control\")}\n                                            model=\".email\"\n                                            id=\"email\"\n                                            name=\"email\"\n                                            placeholder=\"Email\"\n                                            validators={{\n                                                required, validEmail\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".email\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                validEmail: 'Invalid Email Address'\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"input-row\">\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                className=\"form-check-input\"\n                                                type=\"checkbox\"\n                                                name=\"agree\"\n                                            /> {' '} <Label>May we contact you?</Label>\n                                        </Label>\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <Control.select\n                                            model=\".contactType\"\n                                            type=\"select\"\n                                            className={cx(\"select\", \"form-control\")}\n                                            name=\"contactType\"\n                                        >\n                                            <option>\n                                                Tel.\n                                            </option>\n                                            <option>\n                                                Email\n                                            </option>\n                                        </Control.select>\n                                    </div>\n                                </div>\n                                <div className=\"input-group\">\n                                    <Label htmlFor=\"message\">\n                                        Your Feedback\n                                 </Label>\n                                    <Control.textarea\n                                        model=\".message\"\n                                        className={cx(\"textarea\", \"form-control\")}\n                                        type=\"textarea\"\n                                        id=\"message\"\n                                        name=\"message\"\n                                        rows=\"3\"\n                                    />\n                                </div>\n                                <button type=\"submit\">\n                                    Send Feedback\n                                </button>\n                            </Form>\n                        </div>\n                        <div className=\"contact-right\">\n                            <h3>Reach Us</h3>\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            <i className=\"fa fa-envelope\"></i>\n                                        </td>\n                                        <td>\n                                            mailto:something@gmail.com\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <i className=\"fa fa-phone\"></i>\n                                        </td>\n                                        <td>\n                                            +000 1234 5678\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <i className=\"fa fa-address-card\" aria-hidden=\"true\"></i>\n                                        </td>\n                                        <td>\n                                            126, Some Road, Some Street<br />\n                                            Near Somewhere, Some Place<br />\n                                            Some Country\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </ContactPageWrapper>\n        )\n    }\n}\n\nexport default ContactPage;\n\n\nconst ContactPageWrapper = styled.div`\n    color: var(--mainWhite);\n    font-family: 'Poppins', sans-serif;\n    .contact-box {\n        background-color: var(--headerFooterBackground);\n        display: flex;\n    }\n    .contact-left {\n        flex-basis: 60%;\n        padding: 40px 60px;\n    }\n    .contact-right {\n        flex-basis: 40%;\n        padding: 40px;\n        background-color: var(--secondaryBackground);\n    }\n    h1 {\n        margin-bottom: 10px;\n        font-weight: bold;\n    }\n    .container p {\n        margin-bottom: 40px;\n    }\n    .input-row {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 20px;\n    }\n    .input-group {\n        flex-basis: 45%;\n    }\n    .input {\n        width: 100%;\n        border: none;\n        border-bottom: 1px solid #ccc;\n        padding: 0;\n        padding-bottom: 5px;\n        background-color: transparent;\n        color: var(--mainWhite);\n    }\n    .checkbox-row {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n    }\n    .checkbox-row .checkbox-text {\n        flex-basis: 90%;\n    }\n    .checkbox-row .checkbox-input {\n        flex-basis: 10%;\n    }\n    .select {\n        border: none;\n        border-bottom: 1px solid #ccc;\n        outline: none;\n        padding-bottom: 5px;\n        background-color: transparent;\n        color: var(--mainWhite);\n    }\n    .form-check {\n        position: relative;\n        display: flex;\n        align-items: center\n    }\n    .textarea {\n        width: 100%;\n        border: none;\n        border-bottom: 1px solid #ccc;\n        padding: 0;\n        outline: none;\n        padding-bottom: 5px;\n        background-color: transparent;\n        box-sizing: border-box;\n        resize: none;\n        color: var(--mainWhite);\n    }\n    Label {\n        margin-bottom: 6px;\n        display: block;\n    }\n    button {\n        background-color: var(--secondaryBackground);\n        border: none;\n        outline: none;\n        color: var(--mainWhite);\n        padding: 10px;\n        /* border-radius: 30px; */\n        margin-top: 20px;\n    }\n    .contact-left h3, .contact-right h3 {\n        font-weight: 600;\n        margin-bottom: 30px;\n    }\n    tr td:first-child {\n        padding-right: 20px;\n    }\n    tr td {\n        padding-top: 20px;\n    }\n`","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nexport default function Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/shop\">Shop</Link></li>\n                            <li><Link to=\"/contactus\">Contact</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            126, Some Road, Some Street<br />\n\t\t              Near Somewhere, Some Place<br />\n\t\t              Some Country<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +000 1234 5678<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:something@gmail.com\">\n                                something@gmail.com</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center my-3\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2020 Product Catalog</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","import React from \"react\";\nimport { Link } from 'react-router-dom'\n\nimport { ButtonContainer } from \"../../StyledComponents/Button\";\n\nconst EmptyCart = () => {\n    return (\n        <div className=\"container py-5\">\n            <div className=\"row\">\n                <div className=\"col-10 mx-auto text-center text-title text-white\">\n                    <h5 className=\"my-4\">your cart is currently empty</h5>\n                    <Link to=\"/shop\">\n                        <ButtonContainer>Continue Shopping</ButtonContainer>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EmptyCart;","import React from \"react\";\n\nconst CartColumns = () => {\n    return (\n        <div className=\"container-fluid text-center text-white d-none d-lg-block\">\n            <div className=\"row\">\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">products</p>\n                </div>\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">name of products</p>\n                </div>\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">price</p>\n                </div>\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">quantity</p>\n                </div>\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">remove</p>\n                </div>\n                <div className=\"col-10 mx-auto col-lg-2\">\n                    <p className=\"text-uppercase\">total</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CartColumns;","import React from \"react\";\nimport { baseUrl } from \"../../../shared/baseUrl\";\n\nconst CartItem = (props) => {\n    const { id, title, image, price, total, count } = props.item;\n    const { increment, decrement, removeItem } = props;\n    return (\n        <div className=\"row py-4 text-capitalize text-center text-white\">\n            <div className=\"col-10 mx-auto col-lg-2 d-flex justify-content-center align-items-center\">\n                <img\n                    src={baseUrl + image}\n                    style={{ width: \"5rem\", height: \"5rem\" }}\n                    className=\"img-fluid\"\n                    alt=\"product\"\n                />\n            </div>\n            <div className=\"col-10 mx-auto col-lg-2 d-flex justify-content-center align-items-center\">\n                <span className=\"d-lg-none\"> product : </span>\n                {title}\n            </div>\n            <div className=\"col-10 mx-auto col-lg-2 d-flex justify-content-center align-items-center\">\n                <span className=\"d-lg-none\"> price : </span>{\" \"}\n                <strong>&#8377;{price}</strong>\n            </div>\n            <div className=\"col-10 mx-auto col-lg-2 my-2 my-lg-0 d-flex justify-content-center align-items-center\">\n                <div className=\"d-flex justify-content-center\">\n                    <div>\n                        <span className=\"btn btn-black mx-1\" onClick={() => decrement(id, props.cart, props.item)}>\n                            -\n                        </span>\n                        <span className=\"btn btn-black mx-1\">{count}</span>\n                        <span className=\"btn btn-black mx-1\" onClick={() => increment(id, props.cart)}>\n                            +\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-10 mx-auto col-lg-2 d-flex justify-content-center align-items-center\">\n                <div className=\"cart-icon\" onClick={() => removeItem(id, props.cart, props.item)}>\n                    <i className=\"fas fa-trash\"></i>\n                </div>\n            </div>\n            <div className=\"col-10 mx-auto col-lg-2 d-flex justify-content-center align-items-center\">\n                <strong> item total: &#8377; </strong>\n                {total}\n            </div>\n        </div>\n    );\n};\n\nexport default CartItem;","import React from \"react\";\nimport CartItem from \"./CartItem\";\n\nconst CartList = (props) => {\n    // const { cart } = props;\n    // console.log(\"cart =>\", props.cartItems)\n    return (\n        <div className=\"container-fluid\">\n            {props.cart.map((item) => {\n                return <CartItem key={item.id} item={item} {...props} />;\n            })}\n        </div>\n    );\n};\n\nexport default CartList;","import React from \"react\";\n\nconst CartTotals = (props) => {\n    const { clearCart } = props;\n    const { cartSubTotal, cartTax, cartTotal } = props.totalPrice;\n    return (\n        <React.Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-10 mt-2 ml-sm-5 ml-md-auto col-sm-6 text-capitalize text-right text-white\">\n                        <button\n                            onClick={() => clearCart()}\n                            className=\"btn btn-outline-danger text-uppercase mb-3 px-5\"\n                            type=\"button\"\n                        >\n                            clear cart\n                            </button>\n                        <h5>\n                            <span className=\"text-title\">\n                                subtotal :{\" \"}\n                                <span>\n                                    <strong>&#8377;{cartSubTotal}</strong>\n                                </span>\n                            </span>\n                        </h5>\n                        <h5>\n                            <span className=\"text-title\">\n                                tax :{\" \"}\n                                <span>\n                                    <strong>&#8377;{cartTax}</strong>\n                                </span>\n                            </span>\n                        </h5>\n                        <div className=\"my-3\" style={{ borderTop: \"1px dashed white\" }} />\n                        <h5>\n                            <span className=\"text-title\">\n                                total :{\" \"}\n                                <span>\n                                    <strong>&#8377;{cartTotal}</strong>\n                                </span>\n                            </span>\n                        </h5>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default CartTotals;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\n// import styled from \"styled-components\";\n\nimport EmptyCart from './components/EmptyCart';\nimport CartColumns from \"./components/CartColumns\";\nimport CartList from \"./components/CartList\";\nimport CartTotals from \"./components/CartTotals\";\n\nconst CartComponent = (props) => {\n    if (props.cart.length > 0) {\n        return (\n            <React.Fragment>\n                <div className=\"py-5\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <Breadcrumb>\n                                <BreadcrumbItem>\n                                    <Link to=\"/shop\">Shop</Link>\n                                </BreadcrumbItem>\n                                <BreadcrumbItem active>\n                                    My Cart\n                            </BreadcrumbItem>\n                            </Breadcrumb>\n                            <div className=\"col-12 text-white\">\n                                <h3>My Cart</h3>\n                                <hr />\n                            </div>\n                            <CartColumns />\n                            <CartList {...props} />\n                            <CartTotals {...props} />\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n    else {\n        return (\n            <EmptyCart />\n        )\n    }\n}\n\nexport default CartComponent;\n\n// const CartWrapper = styled.div`\n\n// `","import React, { Component } from 'react';\n\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\n\nimport { fetchProduct, fetchPromotions } from '../../redux/Actions/ActionCreators';\nimport { postFeedback } from '../../redux/Actions/FeedbackAction';\nimport { postComment, fetchComments } from '../../redux/Actions/CommentAction';\nimport { addToCart, increment, decrement, removeItem, clearCart, addTotals } from '../../redux/Actions/CartAction';\n\nimport Header from '../Header/Header';\nimport Home from '../Home/Home';\nimport ProductList from '../ProductList/ProductList';\nimport ProductDetail from '../ProductDetail/ProductDetail';\nimport ContactPage from \"../Contact/ContactPage\";\nimport Footer from \"../Footer/Footer\";\nimport CartComponent from '../Cart/CartComponent';\n\nclass ComponentWrapper extends Component {\n\n    componentDidMount() {\n        this.props.fetchProduct()\n        this.props.fetchComments()\n        this.props.fetchPromotions()\n    }\n\n    render() {\n        // console.log(\"totalPrice==>\", this.props.totalPrice)\n        const HomePage = () => {\n            return (\n                <Home featuredProduct={this.props.products.products.filter((product) => product.featured)[0]}\n                    productsLoading={this.props.products.isLoading}\n                    productsErrMess={this.props.products.errMess}\n                    featuredPromotion={this.props.promotions.promotions.filter((promotion) => promotion.featured)[0]}\n                    promotionsLoading={this.props.promotions.isLoading}\n                    promotionsErrMess={this.props.promotions.errMess}\n                />\n            );\n        }\n\n        const ProductWithId = ({ match }) => {\n            return (\n                <ProductDetail\n                    product={this.props.products.products.filter((product) => product.id === parseInt(match.params.productId, 10))[0]}\n                    isLoading={this.props.products.isLoading}\n                    errMess={this.props.products.errMess}\n                    comments={this.props.comments.comments.filter((comment) => comment.productId === parseInt(match.params.productId, 10))\n                    }\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                    addToCart={this.props.addToCart}\n                    cartItems={this.props.cart.cart}\n                />\n            );\n        }\n\n        const CartWithId = () => {\n            return (\n                <CartComponent\n                    increment={this.props.increment}\n                    decrement={this.props.decrement}\n                    removeItem={this.props.removeItem}\n                    clearCart={this.props.clearCart}\n                    cart={this.props.cart.cart}\n                    totalPrice={this.props.totalPrice}\n                />\n            )\n        }\n\n        return (\n            <div>\n                <Header />\n                <Switch>\n                    <Route path=\"/home\" component={HomePage} />\n                    <Route exact path=\"/shop\" component={() => <ProductList products={this.props.products} />} />\n                    <Route path='/shop/:productId' component={ProductWithId} />\n                    <Route exact path=\"/cart\" component={CartWithId} />\n                    <Route exact path='/contactus' component={() => <ContactPage resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\n                    <Redirect to=\"/home\" />\n                </Switch>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        products: state.products,\n        comments: state.comments,\n        promotions: state.promotions,\n        cart: state.cart,\n        incre: state.increment.incre,\n        decre: state.decrement.decre,\n        totalPrice: state.total.totalPrice,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchProduct: () => { dispatch(fetchProduct()) },\n    fetchComments: () => { dispatch(fetchComments()) },\n    fetchPromotions: () => { dispatch(fetchPromotions()) },\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n    postComment: (productId, rating, author, comment) => dispatch(postComment(productId, rating, author, comment)),\n    postFeedback: (firstName, lastName, telNum, email, agree, contactType, message) => dispatch(postFeedback(firstName, lastName, telNum, email, agree, contactType, message)),\n    addToCart: (product, items) => dispatch(addToCart(product, items)),\n    increment: (id, cart) => dispatch(increment(id, cart)),\n    decrement: (id, cart, product) => dispatch(decrement(id, cart, product)),\n    removeItem: (id, cart, product) => dispatch(removeItem(id, cart, product)),\n    clearCart: () => dispatch(clearCart()),\n    addTotals: () => dispatch(addTotals()),\n\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ComponentWrapper));\n","// import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../../shared/baseUrl';\n\n// POST FEEDBACK\nexport const postFeedback = (firstName, lastName, telNum, email, agree, contactType, message) => (dispatch) => {\n\n    const newFeedBack = {\n        firstName: firstName,\n        lastName: lastName,\n        telNum: telNum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message\n    }\n\n    return fetch(baseUrl + \"/feedback\", {\n        method: \"POST\",\n        body: JSON.stringify(newFeedBack),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + \": \" + response.statusText)\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errorMessage = new Error(error.message);\n                throw errorMessage;\n            })\n        .then(response => response.json())\n        .then(response => alert(\"Thank you for your feedback!\" + JSON.stringify(response)))\n        .catch(error => {\n            console.log(\"post Feedback \", error.message)\n            alert(\"Your feedback could not be posted\\n Error: \" + error.message);\n        });\n}","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './App.css';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/configureStore';\n\nimport ComponentWrapper from './components/ComponentWrapper/ComponentWrapper';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <React.Fragment>\n            <ComponentWrapper />\n          </React.Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}